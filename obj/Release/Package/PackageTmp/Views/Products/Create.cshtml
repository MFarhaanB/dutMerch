@model BookStore.Models.Products

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}

<h2>Create</h2>
<body>
    @using (Html.BeginForm(actionName: "Create", controllerName: "Products", routeValues: null, method: FormMethod.Post, htmlAttributes: new { enctype = "multipart/form-data", @style= "margin: 3%;" }))
    {
        @Html.AntiForgeryToken()

        <div class="vkr-url-wrapper">
            <div class="col-lg-14">
                <div class="mid">
                    <h4 class="lead">Products</h4>
                    <hr />

                    <table class="table table-striped">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })



                        <thead class="form-group">
                            @Html.LabelFor(model => model.ProductName, "Product Name", htmlAttributes: new { @class = "control-label col-md-2" })
                            <tr class="col-md-10">
                                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                            </tr>
                        </thead>


                        <thead class="form-group">
                            <tr class="col-md-4">
                                @Html.LabelFor(model => model.ProductCatergory.ProductCatergoryId, "Product Category", htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.DropDownListFor(model => model.ProductCatergory.CatergoryName, (SelectList)ViewBag.ProductCatergories, "--Select Category--", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ProductCatergory, "", new { @class = "text-danger" })
                            </tr>
                        </thead>

                        <thead class="form-group">
                            <tr class="col-md-4">
                                @Html.LabelFor(model => model.vManufactureKey, "Vehicle Manufacture", htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.DropDownListFor(model => model.vManufactureKey, (SelectList)ViewBag.Manufactures, "--Select Manufacture--", htmlAttributes: new { @Name = "vManufactureKey", @Id = "vManufactureKey", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.vManufactureKey, "", new { @class = "text-danger" })
                            </tr>
                        </thead>

                        <thead class="form-group">
                            <tr class="col-md-4">
                                @Html.LabelFor(model => model.vModelKey, "Vehicle Model", htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.DropDownListFor(model => model.vModelKey, (SelectList)ViewBag.ProductCatergories, "--Select Model--", htmlAttributes: new { @Name= "vModelKey", @class = "form-control", @Id= "vModelKey", @disabled = "disabled" })
                                @Html.ValidationMessageFor(model => model.vModelKey, "", new { @class = "text-danger" })
                            </tr>
                        </thead>

                        <thead class="form-group">
                            <tr class="col-md-4">
                                @Html.LabelFor(model => model.vTypeKey, "Vehicle Type", htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.DropDownListFor(model => model.vTypeKey, (SelectList)ViewBag.ProductCatergories, "--Select Type--", htmlAttributes: new { @class = "form-control", @Id= "vTypeKey",@Name= "vTypeKey", @disabled = "disabled" })
                                @Html.ValidationMessageFor(model => model.vTypeKey, "", new { @class = "text-danger" })
                            </tr>
                        </thead>


                        <thead class="form-group">
                            @Html.LabelFor(model => model.ProductDescription, "Description", htmlAttributes: new { @class = "control-label col-md-2" })
                            <tr class="col-md-10">
                                @Html.EditorFor(model => model.ProductDescription, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ProductDescription, "", new { @class = "text-danger" })
                            <tr />
                        </thead>

                        <thead class="form-group">
                            @Html.LabelFor(model => model.ProductStock, "Stock", htmlAttributes: new { @class = "control-label col-md-2" })
                            <tr class="col-md-10">
                                @Html.EditorFor(model => model.ProductStock, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ProductStock, "", new { @class = "text-danger" })
                            </tr>
                        </thead>


                        <thead class="form-group">
                            @Html.LabelFor(model => model.ProductPrice, "Price", htmlAttributes: new { @class = "control-label col-md-2" })
                            <tr class="col-md-10">
                                @Html.EditorFor(model => model.ProductPrice, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ProductPrice, "", new { @class = "text-danger" })
                            </tr>
                        </thead>

                        <thead class="form-group">
                            <tr class="col-md-10">
                                <td>
                                    <div>@Html.Label("Product Image")</div>
                                    <div>
                                        <div class="input-group" style="width:1170px">
                                            <div class="input-group-addon ">
                                                <i class="fa fa-file-picture-o"></i>
                                            </div>
                                            <input type="file" name="img_upload" accept=".jpeg,.jpg,.png" onchange="readURL(this);" class="form-control " required="required" />
                                        </div>
                                    </div>
                                </td>
                                @Html.ValidationMessageFor(model => model.ProductImage, "", new { @class = "text-danger" })
                            </tr>
                        </thead>

                    </table>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="AddLinkTab" />
                        </div>
                    </div>

                </div>
            </div>
        </div>
    }


</body>



<div class="AddLinkTab">
    @Html.ActionLink("Back to List", "Index", new { @class = "glyphicon glyphicon-trash" })
</div>

@section Scripts {
    <script type="text/javascript">
        //image preview
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#image_preview')
                        .attr('src', e.target.result)
                        .width(400)
                        .height(400);

                };

                reader.readAsDataURL(input.files[0]);
            }
        }</script>
}
<script>
    $("#vManufactureKey").change(function () {
        console.log("testing110111....");
        debugger;
        var vManufactureK = document.getElementById("vManufactureKey").value;
        if (vManufactureK !== '' && vManufactureK !== null) {
            $("#vModelKey").empty();
            var rrr = "";
            $.ajax({
                type: 'POST',
                url: '@Url.Action("getVModels")',
                dataType: 'json',
                // data: { id: $("#PreferredUnitdll").val() },
                data: { guid: vManufactureK },
                success: function (mems) {
                    debugger;
                    $('#vModelKey').removeAttr('disabled');
                    $("#vModelKey").append('<option value="">--Select Model--</option>');
                    $.each(mems, function (i, member) {
                       
                        $("#vModelKey").append('<option value="' + member.Value + '">' + member.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve units.' + ex);
                }
            });
            return false;
        }

    });
    $("#vModelKey").change(function () {
        console.log("testing110111....");
        debugger;
        var vManufactureK = document.getElementById("vModelKey").value;
        if (vManufactureK !== '' && vManufactureK !== null) {
            $("#vTypeKey").empty();
            var rrr = "";
            $.ajax({
                type: 'POST',
                url: '@Url.Action("getVTypes")',
                dataType: 'json',
                // data: { id: $("#PreferredUnitdll").val() },
                data: { guid: vManufactureK },
                success: function (mems) {
                    debugger;
                    $('#vTypeKey').removeAttr('disabled');
                    $("#vTypeKey").append('<option value="">--Select Model--</option>');
                    $.each(mems, function (i, member) {
                        $("#vTypeKey").append('<option value="' + member.Value + '">' + member.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve units.' + ex);
                }
            });
            return false;
        }

    });
</script>